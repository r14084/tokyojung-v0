import { Plus, ShoppingCart } from 'lucide-react'
import { type MenuItem } from '../api/client'

interface MenuViewProps {
  onAddToCart: (menuItem: MenuItem, quantity?: number, notes?: string) => void
  onProceedToCart: () => void
  cartItemsCount: number
}

export function MenuView({ onAddToCart, onProceedToCart, cartItemsCount }: MenuViewProps) {
  // Temporary static data for demo (until API is connected)
  const demoMenuItems: MenuItem[] = [
    {
      id: 1,
      name: '‡∏Ç‡∏ô‡∏°‡∏Ñ‡∏£‡∏Å‡∏´‡∏ß‡∏≤‡∏ô',
      nameEn: 'Sweet Kanom Krok',
      description: '‡∏Ç‡∏ô‡∏°‡∏Ñ‡∏£‡∏Å‡πÅ‡∏ö‡∏ö‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏° ‡∏´‡∏ß‡∏≤‡∏ô‡∏´‡∏≠‡∏° ‡∏Å‡∏£‡∏≠‡∏ö‡∏ô‡∏≠‡∏Å‡∏ô‡∏∏‡πà‡∏°‡πÉ‡∏ô',
      price: 35,
      category: 'KANOM',
      available: true
    },
    {
      id: 2,
      name: '‡∏Ç‡∏ô‡∏°‡∏Ñ‡∏£‡∏Å‡πÄ‡∏Ñ‡πá‡∏°',
      nameEn: 'Savory Kanom Krok',
      description: '‡∏Ç‡∏ô‡∏°‡∏Ñ‡∏£‡∏Å‡πÉ‡∏™‡πà‡∏´‡∏≠‡∏°‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡∏∞‡πÉ‡∏ö‡πÇ‡∏´‡∏£‡∏∞‡∏û‡∏≤ ‡∏£‡∏™‡πÄ‡∏Ñ‡πá‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏µ',
      price: 40,
      category: 'KANOM',
      available: true
    },
    {
      id: 3,
      name: '‡∏ä‡∏≤‡πÑ‡∏ó‡∏¢',
      nameEn: 'Thai Tea',
      description: '‡∏ä‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô ‡∏´‡∏ß‡∏≤‡∏ô‡∏°‡∏±‡∏ô ‡πÄ‡∏¢‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏ô‡πÉ‡∏à',
      price: 25,
      category: 'DRINK',
      available: true
    },
    {
      id: 4,
      name: '‡∏Å‡∏≤‡πÅ‡∏ü‡πÇ‡∏ö‡∏£‡∏≤‡∏ì',
      nameEn: 'Traditional Coffee',
      description: '‡∏Å‡∏≤‡πÅ‡∏ü‡πÇ‡∏ö‡∏£‡∏≤‡∏ì‡∏ä‡∏á‡∏™‡∏î ‡∏´‡∏≠‡∏°‡∏Å‡∏£‡∏∏‡πà‡∏ô ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô',
      price: 30,
      category: 'DRINK',
      available: true
    }
  ]

  const kanomItems = demoMenuItems.filter(item => item.category === 'KANOM') || []
  const drinkItems = demoMenuItems.filter(item => item.category === 'DRINK') || []

  return (
    <div className="menu-view">
      <div className="menu-header">
        <h2>üçΩÔ∏è ‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤</h2>
        <p>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏°‡∏Ñ‡∏£‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏≠‡∏ö</p>
      </div>

      {/* Kanom Section */}
      <section className="menu-section">
        <h3 className="section-title">ü•û ‡∏Ç‡∏ô‡∏°‡∏Ñ‡∏£‡∏Å (Kanom Krok)</h3>
        <div className="menu-grid">
          {kanomItems.map(item => (
            <MenuItemCard 
              key={item.id} 
              item={item} 
              onAddToCart={onAddToCart}
            />
          ))}
        </div>
      </section>

      {/* Drinks Section */}
      <section className="menu-section">
        <h3 className="section-title">ü•§ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏° (Drinks)</h3>
        <div className="menu-grid">
          {drinkItems.map(item => (
            <MenuItemCard 
              key={item.id} 
              item={item} 
              onAddToCart={onAddToCart}
            />
          ))}
        </div>
      </section>

      {/* Cart Button */}
      {cartItemsCount > 0 && (
        <div className="cart-floating-button">
          <button 
            className="cart-button"
            onClick={onProceedToCart}
          >
            <ShoppingCart size={20} />
            <span>‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ({cartItemsCount})</span>
          </button>
        </div>
      )}
    </div>
  )
}

interface MenuItemCardProps {
  item: MenuItem
  onAddToCart: (menuItem: MenuItem, quantity?: number, notes?: string) => void
}

function MenuItemCard({ item, onAddToCart }: MenuItemCardProps) {
  const handleAddToCart = () => {
    onAddToCart(item, 1)
  }

  return (
    <div className="menu-item-card">
      <div className="item-image">
        {item.category === 'KANOM' ? 'ü•û' : 'ü•§'}
      </div>
      
      <div className="item-content">
        <h4 className="item-name">{item.name}</h4>
        {item.nameEn && (
          <p className="item-name-en">{item.nameEn}</p>
        )}
        {item.description && (
          <p className="item-description">{item.description}</p>
        )}
        
        <div className="item-footer">
          <span className="item-price">‡∏ø{item.price.toFixed(0)}</span>
          <button 
            className="add-button"
            onClick={handleAddToCart}
            disabled={!item.available}
          >
            <Plus size={16} />
            {item.available ? '‡πÄ‡∏û‡∏¥‡πà‡∏°' : '‡∏´‡∏°‡∏î'}
          </button>
        </div>
      </div>
      
      {!item.available && (
        <div className="item-unavailable">‡∏´‡∏°‡∏î</div>
      )}
    </div>
  )
}